name: Update betterer

on:
  issue_comment:
    types:
      - created

jobs:
  update-betterer-aa:
    runs-on: ubuntu-latest
    if: ${{ github.event.comment.body == 'a' }}
    env:
      FORCE_COLOR: '1'
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Add comment
        uses: actions/github-script@v4
        with:
          script: |
            const {owner, repo} = context.issue
            github.reactions.createForIssueComment({
              owner,
              repo,
              comment_id: context.payload.comment.id,
              content: "+1",
            });
      - uses: actions/checkout@v2
      - name: Checkout Pull Request
        run: |
          hub pr checkout ${{ github.event.issue.number }}
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.3
      - name: Install dependencies
        run: yarn --frozen-lockfile --non-interactive --no-progress
#      - name: Typecheck
#        uses: computerjazz/typescript-error-reporter-action@v1.0.11
#        with:
#          project: tsconfig-strict.json
#          repo_token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Update Betterer
        id: run_betterer_update
        run: |
          set -o pipefail
          CI=0 yarn run betterer --update --reporter ./custom-betterer-reporter.js | sed -r "s/\x1B\[(([0-9]{1,2})?(;)?([0-9]{1,2})?)?[m,K,H,f,J]//g" | tee betterer-log.txt
          result=$?
          output="$(cat betterer-log.txt)"
          output="${output//$'\n'/\\n}"
          output_diff="$(git diff HEAD^:./ -- .betterer.results)"
          output_diff="${output_diff//$'\n'/\\n}"
          echo "::set-output name=betterer-output::$output"
          echo "::set-output name=betterer-output-diff::$output_diff"
          echo "::set-output name=betterer-result::$result"
          git diff HEAD^:./ -- .betterer.results
      - name: setup git config
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - name: commit
        run: |
          git add .betterer.results
          git commit -m "Updated Betterer results file"
          git push
      - name: Add comment
        uses: actions/github-script@v4
        env:
          BETTERER_OUTPUT: ${{ steps.run_betterer_update.outputs.betterer-output }}
          BETTERER_DIFF: ${{ steps.run_betterer_update.outputs.betterer-output-diff }}
        with:
          script: |
            let fixedIssuesCount
            let newIssuesCount
            function getNumber(text) {
              const numbers = text.match(/\d/g)
              return Number(numbers.join(""))
            }
            const positiveGifs = [
              "https://i.giphy.com/media/5GoVLqeAOo6PK/giphy.webp",
              "https://i.giphy.com/media/PaSnUZW1EeypulsOwd/giphy.webp",
              "https://i.giphy.com/media/MOWPkhRAUbR7i/giphy.webp",
              "https://i.giphy.com/media/m4jqqr0kXABqw5a4nb/giphy.webp",
            ]
            const randomPositiveGif = positiveGifs[Math.floor(Math.random() * positiveGifs.length)];
            let shouldPrint = false
            const output = `${process.env.BETTERER_OUTPUT}`.replace(/\\n/g, '\n');
            console.log(output)
            multilineOutput = output.replace(/\\n/g, '\n');
            newErrors = multilineOutput
              .split('\n')
              .filter(line => {
                const isFixedIssuesSummary = line[0] === "-"
                const isNewIssuesSummary = line[0] === "+"
                if (isFixedIssuesSummary)
                  fixedIssuesCount = getNumber(line)
                if (isNewIssuesSummary)
                  newIssuesCount = getNumber(line)
                return isFixedIssuesSummary || isNewIssuesSummary
              }).filter(line => {
                return line.substring(1)
              })
            .join('\n');
            console.log(multilineOutput)
            // ![avatar](${context.payload.comment.user.avatar_url})
            const appraisalMessage = fixedIssuesCount > newIssuesCount ? 
              `\n\n@${context.payload.comment.user.login} you are awesome! You have fixed more issues than you have added!\n![Thank you!](${randomPositiveGif})` : ""
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `**ðŸ¤– BOT:** Betterer results file was updated as requested by \`@${context.payload.comment.user.login}\`\n\`\`\`\nSUMMARY OF CHANGES\n\n${newErrors}\n\`\`\`\${appraisalMessage}`,
            })
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `\`\`\`${context.payload.comment.user}\`\`\``,
            })



#      - name: Add comment
#        uses: actions/github-script@v4
#        with:
#          script: |
#            github.issues.createComment({
#              issue_number: context.issue.number,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: `âœ… Updated betterer file! \`\`\`${JSON.stringify(context.payload,null,2)}\`\`\``,
#            });
# sdfsdfgs
# aasddsa
# user.avatar_url  - https://avatars.githubusercontent.com/u/5477821?v=4
# user.login  - Evilweed
#asd
#asdsd
#asd
#asldj
#asd
#asd
#asdlkjasasddaaadsasd asd
